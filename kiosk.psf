<File version="3.2">
  <FileID>530face5-61e2-4a7b-b7aa-22ca250959ee</FileID>
  <Preview>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
ZBeApUuXek8FAMDpxB75UwDgNAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhH
AYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+
UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACA
fxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA
4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoA
APhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8C
AAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6j
AACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDz
KAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDg
PAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQA
OI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8F
AM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhH
AYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+
UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACA
fxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA
4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoA
APhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8C
AAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6j
AACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDz
KAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDg
PAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQA
OI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8F
AM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhH
AYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+
UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACA
fxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA
4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoA
APhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8C
AAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6j
AACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDz
KAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDg
PAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQA
OI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8F
AM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhH
AYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+
UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACA
fxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA
4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoA
APhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8C
AAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6j
AACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDz
KAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDg
PAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQA
OI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8F
AM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhH
AYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+
UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACA
fxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA
4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoA
APhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8C
AAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6j
AACAfxQAOI8CAAD+UQDgPAoAAPhHAYDzKAAA4B8FAM6jAACAfxQAOO9kF4AlS5ZQAACcdigAcB4F
AAD8owDAeZ9XAGzqzC+n/QX9fdLQNaDa9j7lljerruOgmrqHCCHktEnDzH4u0P7vRFNz3D6XAoA5
9UUFwP4y2nb6e6d9UPV7R72vlXv6CSHktEnAfZ7PBNrnUgAwZ76oABBCCJm7UAAwpygAhBByaoQC
gDk1WwCqTAHwTvkTQggJSipNOikAmCuLFi0qHJHUNWRifvEIIYQEJ3bwHzP74/CtURQAnHzzbr21
JDQ8wmuchBBCgpvwrZF65tnnKQAAAAAAAAAAAAAAAOAr6mtf+/8BwdXRsL4kC+oAAAAASUVORK5C
YII=</Preview>
  <Form>QT4r1cwzVhQAACODCAAAAAAABADVmF9v2jAUxd8n7TtYeUaU8C9FgkiDrtLUdqsWyh6Rk9xChokj29mgn35O
AlsKCbGhoFWgiJB7co/DLyfG/W/uT/AEtz9+QKif7SCxjmBgOGsuYFn/EYQ+/c3rt5Qts20NFR2q
oQkwHtBw0K43klcNjWIiYgaDEGLBMKmhx9glgXcH6zFdQDhwLQt3vE7X7LXa0LjuGSjES9n5WZ5v
QmdAOA5ndwHlCwdEHBnImwfEZ1JpjGgoGCXcSI1L64+MRsDEenOKT7GgjocJ3ARLCBNbstSUnpqN
/tW2tkr7QH0w7FvZqlIzIgGEwglepKDTln2sVrNS9FVuDbtktJXqMayEYf9VolSKSrSff0l7G+E9
xX5p22lytH+V1m/F1Vh8D7x54mdIV2eng8leQvZy6co8hMT+FbunHhbSg2E3uzVkdq/3rtO+5gGz
WSAVnRravBVE2Q+bN6ogyuBp9+Sl6VgqXcbY/RL6sDJslYFkuBQV5tlIqkZzSQT4rwcwzR3ZweMq
40OdlnvsAjk7JyTpMqLLKBbAkq/0YElTIP1JxiwGhQv8mq5uVw+uRgrXfjiVwbU3OmXCzGarMAYP
AWYpA1ZlKQ+bDE1vUTCUaXrgVMoulUfe0YgNsbcYUUKZYWfm9Chr9PQx080w7xjCWg1LEqbi7B9h
hdWlyZS39U6T6QYgumUAL+AIX0oumk5NlQfSqem0O0L1hLL0E0rpgZkmVGILZb6QNFZHJdbKkmp3
WO8rrfxnrg3bG+SULnC6OZUN66wJ1dZKqMxQeTbtaGXtU1St0udqGAtBw7Nj5QjMxEmzcVPlfj+B
kNShxiRJnrylNwtvKUeQqpcnDpOAx5g4Yk0gdxuWhX5BZqW9ijJqp/yBxhyqNPr8SY8zBpwPMTs7
hNGml4vZsSiaXfMCLOaMqkdWR5/I/dD9r6dEmms+bz8rUvmbc+qsSGWpp4yB4vWrQwQUVpfNbIqW
g6pCILez/cjtP2HcUdhWFAAA</Form>
  <Code><![CDATA[. .\tasks.ps1
. .\functions.ps1

$formVogelsangKioskSetup_Load={
	$Start.Enabled = $false
}

function Validate
{
	if (($dfsKey.Text.Length -gt 4) -and ($computername.Text.Length -gt 3))
	{
		$Start.Enabled = $true
	}
	else
	{
		$Start.Enabled = $false
	}
}
$dfsKey_TextChanged = {
Validate
}

$computername_TextChanged={
	Validate
}

$Start_Click={
	$dfsKey.Enabled = $false
	$computername.Enabled = $false
	$Start.Enabled = $false
	$progressbar.Style = 'Marquee'
	$Tasks.GetEnumerator() | ForEach-Object {
		$Task=$_.Key
		Write-Host $Task
		Invoke-Command $_.Value
		$richtextbox1.AppendText("`n$Task")
	}
	$progressbar.Style = 'Continuous'
	$progressbar.Value=100
}

$labelComputername_Click={
	#TODO: Place custom script here
	
}

$labelDeepFreezeStdKey_Click={
	#TODO: Place custom script here
	
}

$labelVogelsangKioskSetup_Click={
	#TODO: Place custom script here
	
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember) 
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}




$taskbox_SelectedIndexChanged={
	#TODO: Place custom script here
	
}

$richtextbox1_TextChanged={
	#TODO: Place custom script here
	
}
]]></Code>
  <Mode>1</Mode>
  <Assemblies />
</File>