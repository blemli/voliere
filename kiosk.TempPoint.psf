<File version="3.2">
  <FileID>530face5-61e2-4a7b-b7aa-22ca250959ee</FileID>
  <Preview>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
RSsivUB7wndqR1SxcxQ/fd/suqZn5ysyo1y5Zp0L6/YrISnR7MTMoFtQqr2J9nl/e386lGx2XKHO
fY0xO9gy5ZnCkV+7zwy+CebyaAWHJyguv0GFDWY9svIUlVGp/MZeZRcWOrex1+XXdZjl2seoSdGx
Cc7jFhoRo9DweMWbcmbXzSbTHCk515nl7TYFKduUkIK6diWnpWn77ljF5jWa+2dfSBinYPNYhdt3
WyRkKqXMzD8/T4FBIeZ26dpp5hESnqxks2OeXPZR/67EEylq6FJQuC0A5V9eAKYzNWil2kH1y2IG
TZ+3PyrTBSDUFHP7OfxfVQBs+bDvRHj3kx166vnXteDZV5yzEb7y5NMr9PoHW5y32TlnInzMz+bo
AmDfjuc8BWAeF+fdMj5i31Fj13ttYIQWPb9K859dqSUr39fOOFvCzdG6GejfXxeiRc+96pwleXnV
anOgUujcxtf8bOyypguAPeVvz1Ae/W9kS33dgVEKAGaGLQD7Dgw7g7EdxD6byctsAUjLKjRHsmYw
M8nIKVKiGQi37EzShh2xWrc1Wp8GReuTgCit2RKlD9dHaE9ikYpNUfA1zyIzmBWZwe3oywvMIFi0
z1ze2GPSbQapyctzK0xjNoNwefuIKtv6lBAbbjbgNOXU9zjTFDZ0m+XY2xyZZ2FDjznasQNdp5mn
ve7oeR5wrnduY25rryu0l9eZ5dtpnPXZb9bHXtet/Jo2ZZU3q6h5SBX7x1RWW6vt27ZpT5YZOM0O
9bP3wdzGroMtOnY9zLyLG7sm75udlzOdXf7kcovteh2eh7ncWc/Jy+36f3aek9/b9S60g7tzmyO3
m3wMJmOP9Kavn77N5ONzZH2nH4PJedl/k6l5TD8mZvqcvBwFBO5Wal2P8xfKPr9s4qWUNPU4n8QX
l1kx+Y6PYwanz6fZeZfJV8ZO5/P2R2KfqrIfQbwzrsB5m+9u8zW3ar+5bvr2n48tKdlmGnsaPiqj
7Etj3846eSTve142dn5phQ1m4M9wnn/fuifD+X1Ot8/DO8/FT56Cn/58A2eQN49Ttn2HgzmKtx9p
bJdhz8DZy20BsE+/2VP5Sfm1zle7jMO3NV8nMzXvqfnmm0F+sykA9jEpOGZ7yjPbeUPXGAUAM2Ph
woVZTZ0jzmlvO+j4iv0ltQOj89X5hd3vDJrlTV2qaLbpVmXLZKpaelTdagcMM/CZaX3N73hjB62c
/BxtC41QWLR9JXyE2Wgn3y1QbAZFe3bA1+2+vnSppKFdMbFR2hYW57xoMCR0l0KTSszj1e1j+m9O
ivb1Kc85A2AKQG2Xeby/+PeDeCNlLX3O2/ASs6udQe3wQDcDsQNlXEal8yFA0eZreEKh87oSX9Me
m8zyNjPYtn95zDS+bnt0nGnMQL51T6bs62K2h2eq2GzjGRWm5B+OfV3P5Pf2XUw29jJbROx9sF/t
z5PX2WmPvq5j6rqpeZjlOZmah/1ql1VoBvmAXWnO6X5byo/+N7IHLfu6xykAmBkLFyzMau4amTwq
Nb+MXxhzBOscHR5PnGl9zMN1zNFrg9moiquVkl9hUq08c+Rfao5kfE//9afYnhWoNkcQ+ZVKybPv
M25ScXO/SsyRva/pvzGx/4Z1ZsdW0awCX9cTz6W8tV/bIrKdP4hT1TqgsqbeGYt9ZXt8ZqXC4osU
k1mtPaYA1LQPmoMI39OfiNi31+WaI/Mg+8maZju2ZwBq2vqds1tlh9NzJGY/42T6Ojufw98fNd3h
2Ot8XT6d6Xl0O2cA7FOsdv9y9L+RPau4r+cgBQAzwxaAlu4xM6D1mvSchDEbjBlwp1NqNiTf053A
mKPhI+vQ53uab2LMDqu06RS6v9/wlJvf3eSCRgWGpSt4b7ZJzgwm21mufWFdXnWHtpmj8B0RWQqJ
9DXtiYtdh7isaufxCInMc9bjs9N80ePi6/JjL5v++YunDTHZujvdFKBiZ/s69t/IPv3X3CsKAGaG
LQCtpgDYHb1twkfH+QUlhHxjYkusPf1vX7jn63nyExW7PHuafLpI59Uc8Ms62KcB7L7OFvnC+m6l
FZvrbHxMf0JilmVfJ2APbL5on9vSRwHADFlgC0DP+OSGaTeMo2KPGCoIId+Q9Dpfq1r7VdU2MPMx
y51eD/t9ta9pTnTsOpgR1q5Dpfnqc5oZiF22XYdj97m2FJhVpABgZixYsMBnAbC/iO2dPerp6VF3
NyGEkK87VaYIlNqnGI/a71IAMGO+rADsNwWgr7dHvaYEEEII+XpDAYBffVUB6DUFwJ4FIIQQ8vWG
AgC/ogAQQoh/QgGAX1EACCHEP6EAwK8oAIQQ4p9QAOBXFABCCPFPKADwKwoAIYT4JxQA+BUFgBBC
/BMKAPyKAkAIIf4JBQB+RQEghBD/hAIAv6IAEEKIf0IBgF9RAIib9PX1aWBgQAP9/YSc2hmYjK/t
5HhDAYBfUQDI8abfDP5NTc1KTc9SZlYeIad00jNzlJdfNPm5/r29PreZrwoFAH41kwWgf3BIIyMj
hzM0OHBiC0Zvn4aGjyzPZnh4yPkDRz6nn6H0myPo6fUZPI4jiN6+AQ0NDTo7Gl/X2/s5aB7b/qPu
V//AkIa/7DZ/RQbNepeUlquwuFR9ff2EnNKx211SSoa6OjspAPCmmSkAvc5A1LKvSnlZ6UpOSlZK
SrIKa/ZpbGxCQ/2TfxrT923/ypiNs6erQ7XlhcpITVFysl1mitIyC9Ta2euXEtBtMmzub1/rPqWZ
+5+UnKq6pm5NjI+ax6fbrLN5nI5Zr15zPzrbm1VbU68DU4/j0dfb29j7WV9Xq7YD3c71AyNmfu31
KiwsUXvX5F90/Mxt/srYAlBaVqG6+gYBkDKyc9VJAYBXzUQB6O0f1MH+Fi2ffaHOuPKPmvf4PM19
5BE99NgTenFliOq6x50S4ExvNqT+ftOwj92gzEBoLz/eI9qB0UPanx+iK874oW66e64efeRhzZ07
V08sfltFrX1meT42WLuMvr7PLaPXtH17+dGXfWGm19PHDmFoaFj7skJ039136raH5unxR2brjll/
1CeRxRoYHNbA0JCGBs2RRbcpA1O3GZ44pKLgl3XB2TcprXNYI/2fXY/+oTH11SbpT9deqg2Zzc5O
aaA1S/ef9ytd+dCHauwZ0KC5r67uwxdkugDU1NY7ywFOZYcOHVJGFgUAHjZzBaBeT119uRZszpva
fKTeugI9dt1FuvPlneo3R8YDQyOSORru7uwwA99BjQ8PqNsMhoMjEzo0MqADXeZo+dBBpyz0Dphp
jYMHD01+HR9Rnz2KnlrmwKjUkrFRF1/xB6XsdyaZdNAMmOb6kfFD5jZmvuaikaF+DZllHBzq04Hu
Xh00/w312SP2Po2b9Rjt61TXwJBz215zFD5qbnssu059g2ahY8Pq6jyg0YMHNWbma9ffeQz6BjQ+
2KAnr/mNbl65Y+pWUviHD+nK259Xm5ll/Icva8nHic7y+3r7zX2dnKZq50v67S9/r+QvKgA18bru
0rO1oaBPB3uK9ND5P9F5s95UZechjQz0aXjsoCYGe3TA3J9Dh8zjbMqAnffo1Pr19g+bpRzSoL3P
X3ImhgIAHEEBgOfNXAFo0LPXX6nHP0nWqOxA2qMJsxFV7nlZZ539J+UcMANxa4k+WDVfTy2Zr8ee
eVYxha1mAB5XQ06Elr04TwtfeEJPLX9Lld1j6iiP1ztvfaB1q9/UwgXztT40Sz0To+qfKgG2ALRm
btFll12u0MIWdR1oV0tLi7lPplD0dSl6x1pt2LpRry1epvDsetXm7tLSJY9p/nOP67lVH6mme1wT
I72K3/6WnjXLffypR/TWllgNj/Yq7NNVWrRwoZ56+lm98PyzenLR80qt7ddAfbbeXPGEFpn1f/y5
F5VW1emUC+cxcApAq5bccY4uufdFFdc3qt+UGDvGj48Pq7UkUrf9+rv6zq+vUlBmgw6Ndipg9V/0
9OIVemPx7Tr7zC85A1CToFuvvUIBaQl6/pbTdONj76nVdhGz7JHhYRXHbdELLzymJxfP00vvblZT
xz5tevctxZQ0O9d3Nebqw7feV1b9gS99TQIFADiCAgDP82cBsKfp23MCdPElv1dCXYveXXC7bn72
HRWVl2jDi3fpwisfVlFdgR645Ro9/ekelZbmafEt52nW4g0qSHhbf/fv/6tmr/pYuwPe0A3nnqe/
hBdrbHRkat7S/rwduuiX39aVt8zW3XfdqdmzZ2t1eL4OmQH3ueu+rZ/cfJ92RKWoMClUt950nVZs
jVNJSZrm/f4MzXllp4oS1uqS629XcHqR8uM365rfnK7Xd+WpvCBZYXsilRKzVbf99p/1X376JxW1
1OulOTfpzpWfqri8WO89doMuuXGRqoYmNDj1GA4Oj6o1P1S3//4Cc98u0i8uOE1zlr+v0gNjGmmv
1OIbL9R5tz6rsn1tWv/i7Tr/tsUKjYjVyvuu1vd/eJMye3wXgP66NP358h/qnN/9i/6fv/nfWrq1
1OyeDmpwaETteSG6+urr9FZYqkoK4jXnkjM1/81NWnTr2bptSbCzI8v+9Amdfv5s5Zv1GB744h0Z
BQA4ggIAz/NnARgcP6Tm9LW68OKbFZ+8R5f8+vu64MHFenXFCi1d+LCuueZufbzyOX33Z7/S3S+s
dC5feM8tutkcQUdvfVO/+s2tyu5wNkWte/xCnTHrVXUNS/19vVNnADbrssuvVHh5p3OK3m6o3b19
Ghvo0PN3nKt5HyU4G3LB2sf1X7//Wz388ivOMp6443rdNXeZlt13jf7+3Jv04iur9MryZbrjygs1
b+Uu58yFNKxNz92hX1/8kHLazMBZsEU//f539YcnXnTm8cJj9+qK389WfHm/ORK3g3a3WfaAc8Qv
U0CqqrK1OeA13XPhb/Xr3z2rRjPTrQtv1x9f3G1mnac//PpHejmi0VlSWchSnfnra5TyBWcA+hsz
dMNP/6OuePQjRX20XD/9wcXaVtFlbnlIMavu0v/zk3P15PJVenXlCj1861W665l1ytyxSpdc/ZCa
x4a16p6rdM9rEeZ+jTv/LkfP/+hQAIAjKADwvJktAL/X/PUZzsYzMjz5HH7cO/fq/BuXqr4kShea
Qe/F4FzVVVWao9V0JWWWKv6DBfrxGZcrJK9eNeUlys9OVEp+tfJDlutnv/mT8pwCMKHNi67T+Xe9
oc6Rg58tAFf8XpHVfRofGZT9EJu+fjMg2wIw+zw99lGcsw5Jb96t7517i2JK96m6rFh5Zhm5ucVa
OetMnXXfX1RS36DK0gKlJsUoo6jVHFz3aN0zt+n759+kuP1DzjwOJH+kX/zsl3o7ulS1leUqzk9R
dHyG9rX1OutjnwLoaatQVHikGrvG7d7Dud1Q1gad9p3zFHOgX5sf+6M5Kg/Tof5MXfmvP9MrsU3O
NFVhy3XOaVcrudPcKWP6uXv72E4/BXDTZedoY0GvvVbvPnyevnvBHDWbUhG74hb94NJ7lFK5T1Vl
RcpOj1VidqNGWzL15+tu0KvrV+ueG2ZpT2W3xgc/Wy6ODQUAOIICAM+bqQJwyBSA+ZefpVte2KCS
yjLl5mVp6/pXdNXFt+n9GHOkO9aiZ/98nm59ZoPzYr+EtYt0w+0vqLgySbdceLaWbslWd1e7Pnzy
Js1ZGaKSlPf0k//5C721PVnlSYH680UXaGlwvsYnpp4CGJNa0j7VWeecq90VPc7z4c669PVr3BSA
BTf9Sve9HelsyB15QbrknN/pnT2l6u5s0Ctzrtb892KVufMlnXnhHxVb0aEDVbGac93VWhNTpA1P
/0H/9//+id6ISVVlebFyTFloqs3Rw9edrfv+slNdXZ0Ke/0B3XjPCtUPjTtPAdjHYKizUouuO03X
zn9P8UUlKi1M0JK5F+sP961Ux9hBBZgSc9pNi1Wzv1Wvz71cVz/4lorLU/XM7NP0X//hGuX2tOjd
hQ/pnZ25Gh0fdu5nv5l/X1WMrjj31/oorUn2NZGjbem65Qd/r/PnfKyynM26+JyLtDa+Wt0dlVoy
+0o9+X68c7/D3nhQf/8f/7tufPxtdZrlH/05Ar5CAQCOoADA82akAJhBd6SvQzvefVqz775XDzzw
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
AXc+kMMtLM/0AAAAAElFTkSuQmCC</Preview>
  <Form>7zPK16l2HhQAACODCAAAAAAABADVmFFv2jAUhd8n7T9YeUaUAIEiQaSRttJUulVK2z0iJ7mlGSaObGeD/vo5
CXQRSYhNC9oEQkDuiY99vxxMxt+9n+ALbn/+hNA4/4DEJoaJ4W64gFX7RxgF9Ddv31C2yl9bqOpQ
Cz0B4yGNJv12J320kJMQkTCYRJAIhkkL3SceCf1b2DzQJUQTbzjElm8NzFGvD53LkYEivJIjP8vz
PdEFEI6jxW1I+dIFkcQG8l9CEjCpNBwaCUYJNzLj0vo9ozEwsdme4ksiqOtjAlfhCqLUliw1padu
Z3yxq23S3tEADPtGDtWocUgIkXDDVymw+nKcYa/bKPomXw27ZraN6gdYC8N+U6JMimq017+kva1w
RnFQO+w8PTq+yOp34mYsnBfwlxDMQi6mdH1yQATmS4+uDwFRXq/UBBYijBbXEfYIyDV4YAmU1qqs
nFEfC2ncsLuDFjIHloLmDrNFKBVWC22fCqIciO3sFOpz3vojuZSWVQa7ghnsfY0CWBv2ZZmRi7zP
6l2fYQ/IyZtN0lEcuooTASz9Sq/t2dWcrdNR3R4M9JrdyZqt0ou82aXZKbfd7PYq4+xQ14cq1Vmu
NFkqBooMP39ZMZV5dmAvTLQpS/2cI1T8oxGbYn/pUEKZYefm9CjrjPQx080U/xjCep2hJEzF2V/C
KquLsKTtdF7kb04awEVb88KR9zJzxmS6AohvGMAruCKQkrOmU9c8Qzrtz1A9oYb6CaWCdJ5QqS2U
+0LSWBvVWKtLqv1p/V9pFTxzbdg+IKd0gdPNqXxaJ02ovlZC5Ybqs2lPK2sf42aVPlfTRAganRwr
V2Am9Kja2x2bKtf7OwjJHGpskuTJe0qh8gZITzmCVL08cngKeYKJKzYECpdhXehXZFY2VlVG7ZXf
0YRDk0afP+lxwYDzKWYnhzDejuVhdiyK5sA8A4sFo+qRZekTWQ7df3pLpHnv5uN3RSp/c967K1K5
ZVPHQPV9qEMEVFbX7Wyqbus0hUDhw+4tt/8AFeoOPB4UAAA=</Form>
  <Code><![CDATA[importImport

function Gugus { }

$Tasks = @{"Unterstützungsprogramme installieren"=Install-Helpers }

function Install-Helpers
{
	
}
$formVogelsangKioskSetup_Load={
	$Start.Enabled = $false
	Foreach ($Task in $Tasks)
	{
		$taskbox.Items.add($Task["Description"])
	}
	$global:datasource = New-Object System.Data.DataTable
	$global:datasource.Columns.Add("Task")
	$global:datasource.Columns.Add("State")
	$global:datasource.Rows.Add("Git installieren",$true)
	$global:datasource.Rows.Add("Gugus",$false)
	$taskbox.DataSource = $global:datasource
	$taskbox.DisplayMember = "Task"
	$lb.ValueMember="Task"
}

function Validate
{
	if (($dfsKey.Text.Length -gt 4) -and ($computername.Text.Length -gt 3))
	{
		$Start.Enabled = $true
	}
	else
	{
		$Start.Enabled = $false
	}
}
$dfsKey_TextChanged = {
Validate
}

$computername_TextChanged={
	Validate
}

$Start_Click={
	$dfsKey.Enabled = $false
	$computername.Enabled = $false
	$Start.Enabled = $false
	$progressbar.Style = 'Marquee'
	$index = $taskbox.Items.IndexOf("Gugus")
	$taskbox.SetItemChecked($index,$true)
}

$labelComputername_Click={
	#TODO: Place custom script here
	
}

$labelDeepFreezeStdKey_Click={
	#TODO: Place custom script here
	
}

$labelVogelsangKioskSetup_Click={
	#TODO: Place custom script here
	
}

#region Control Helper Functions
function Update-DataGridView
{
	<#
	.SYNOPSIS
		This functions helps you load items into a DataGridView.

	.DESCRIPTION
		Use this function to dynamically load items into the DataGridView control.

	.PARAMETER  DataGridView
		The DataGridView control you want to add items to.

	.PARAMETER  Item
		The object or objects you wish to load into the DataGridView's items collection.
	
	.PARAMETER  DataMember
		Sets the name of the list or table in the data source for which the DataGridView is displaying data.

	.PARAMETER AutoSizeColumns
	    Resizes DataGridView control's columns after loading the items.
	#>
	Param (
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		[System.Windows.Forms.DataGridView]$DataGridView,
		[ValidateNotNull()]
		[Parameter(Mandatory=$true)]
		$Item,
	    [Parameter(Mandatory=$false)]
		[string]$DataMember,
		[System.Windows.Forms.DataGridViewAutoSizeColumnsMode]$AutoSizeColumns = 'None'
	)
	$DataGridView.SuspendLayout()
	$DataGridView.DataMember = $DataMember
	
	if ($null -eq $Item)
	{
		$DataGridView.DataSource = $null
	}
	elseif ($Item -is [System.Data.DataSet] -and $Item.Tables.Count -gt 0)
	{
		$DataGridView.DataSource = $Item.Tables[0]
	}
	elseif ($Item -is [System.ComponentModel.IListSource]`
	-or $Item -is [System.ComponentModel.IBindingList] -or $Item -is [System.ComponentModel.IBindingListView] )
	{
		$DataGridView.DataSource = $Item
	}
	else
	{
		$array = New-Object System.Collections.ArrayList
		
		if ($Item -is [System.Collections.IList])
		{
			$array.AddRange($Item)
		}
		else
		{
			$array.Add($Item)
		}
		$DataGridView.DataSource = $array
	}
	
	if ($AutoSizeColumns -ne 'None')
	{
		$DataGridView.AutoResizeColumns($AutoSizeColumns)
	}
	
	$DataGridView.ResumeLayout()
}



function ConvertTo-DataTable
{
	<#
		.SYNOPSIS
			Converts objects into a DataTable.
	
		.DESCRIPTION
			Converts objects into a DataTable, which are used for DataBinding.
	
		.PARAMETER  InputObject
			The input to convert into a DataTable.
	
		.PARAMETER  Table
			The DataTable you wish to load the input into.
	
		.PARAMETER RetainColumns
			This switch tells the function to keep the DataTable's existing columns.
		
		.PARAMETER FilterCIMProperties
			This switch removes CIM properties that start with an underline.
	
		.EXAMPLE
			$DataTable = ConvertTo-DataTable -InputObject (Get-Process)
	#>
	[OutputType([System.Data.DataTable])]
	param(
	$InputObject, 
	[ValidateNotNull()]
	[System.Data.DataTable]$Table,
	[switch]$RetainColumns,
	[switch]$FilterCIMProperties)
	
	if($null -eq $Table)
	{
		$Table = New-Object System.Data.DataTable
	}
	
	if ($null -eq $InputObject)
	{
		$Table.Clear()
		return @( ,$Table)
	}
	
	if ($InputObject -is [System.Data.DataTable])
	{
		$Table = $InputObject
	}
	elseif ($InputObject -is [System.Data.DataSet] -and $InputObject.Tables.Count -gt 0)
	{
		$Table = $InputObject.Tables[0]
	}
	else
	{
		if (-not $RetainColumns -or $Table.Columns.Count -eq 0)
		{
			#Clear out the Table Contents
			$Table.Clear()
			
			if ($null -eq $InputObject) { return } #Empty Data
			
			$object = $null
			#find the first non null value
			foreach ($item in $InputObject)
			{
				if ($null -ne $item)
				{
					$object = $item
					break
				}
			}
			
			if ($null -eq $object) { return } #All null then empty
			
			#Get all the properties in order to create the columns
			foreach ($prop in $object.PSObject.Get_Properties())
			{
				if (-not $FilterCIMProperties -or -not $prop.Name.StartsWith('__')) #filter out CIM properties
				{
					#Get the type from the Definition string
					$type = $null
					
					if ($null -ne $prop.Value)
					{
						try { $type = $prop.Value.GetType() }
						catch { Out-Null }
					}
					
					if ($null -ne $type) # -and [System.Type]::GetTypeCode($type) -ne 'Object')
					{
						[void]$table.Columns.Add($prop.Name, $type)
					}
					else #Type info not found
					{
						[void]$table.Columns.Add($prop.Name)
					}
				}
			}
			
			if ($object -is [System.Data.DataRow])
			{
				foreach ($item in $InputObject)
				{
					$Table.Rows.Add($item)
				}
				return @( ,$Table)
			}
		}
		else
		{
			$Table.Rows.Clear()
		}
		
		foreach ($item in $InputObject)
		{
			$row = $table.NewRow()
			
			if ($item)
			{
				foreach ($prop in $item.PSObject.Get_Properties())
				{
					if ($table.Columns.Contains($prop.Name))
					{
						$row.Item($prop.Name) = $prop.Value
					}
				}
			}
			[void]$table.Rows.Add($row)
		}
	}
	
	return @(,$Table)
}



function Update-ListBox
{
<#
	.SYNOPSIS
		This functions helps you load items into a ListBox or CheckedListBox.
	
	.DESCRIPTION
		Use this function to dynamically load items into the ListBox control.
	
	.PARAMETER ListBox
		The ListBox control you want to add items to.
	
	.PARAMETER Items
		The object or objects you wish to load into the ListBox's Items collection.
	
	.PARAMETER DisplayMember
		Indicates the property to display for the items in this control.
	
	.PARAMETER Append
		Adds the item(s) to the ListBox without clearing the Items collection.
	
	.EXAMPLE
		Update-ListBox $ListBox1 "Red", "White", "Blue"
	
	.EXAMPLE
		Update-ListBox $listBox1 "Red" -Append
		Update-ListBox $listBox1 "White" -Append
		Update-ListBox $listBox1 "Blue" -Append
	
	.EXAMPLE
		Update-ListBox $listBox1 (Get-Process) "ProcessName"
	
	.NOTES
		Additional information about the function.
#>
	
	param
	(
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		[System.Windows.Forms.ListBox]
		$ListBox,
		[Parameter(Mandatory = $true)]
		[ValidateNotNull()]
		$Items,
		[Parameter(Mandatory = $false)]
		[string]
		$DisplayMember,
		[Parameter(Mandatory = $false)]
		[string]$ValueMember,
		[switch]
		$Append
	)
	
	if (-not $Append)
	{
		$listBox.Items.Clear()
	}
	
	if ($Items -is [System.Windows.Forms.ListBox+ObjectCollection])
	{
		$listBox.Items.AddRange($Items)
	}
	elseif ($Items -is [Array])
	{
		$listBox.BeginUpdate()
		foreach ($obj in $Items)
		{
			$listBox.Items.Add($obj)
		}
		$listBox.EndUpdate()
	}
	else
	{
		$listBox.Items.Add($Items)
	}
	
	if ($DisplayMember) 
	{
		$listBox.DisplayMember = $DisplayMember
	}
	if ($ValueMember)
	{
		$ListBox.ValueMember = $ValueMember
	}
}




$taskbox_SelectedIndexChanged={
	#TODO: Place custom script here
	
}
]]></Code>
  <Bookmarks />
  <BreakPoints />
  <TracePoints />
  <Mode>1</Mode>
  <Assemblies />
</File>